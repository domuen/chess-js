{"ast":null,"code":"import createTile from \"./create-tile\";\nimport findTileIndex from \"./find-tile-index\";\nconst movePiece = (board, tile, newTile) => {\n  const spreadBoard = [...board];\n  const [boardIndex, tileIndex] = findTileIndex(board, tile);\n\n  // remove piece from old location\n  const capturedRow = [...spreadBoard[boardIndex]];\n  capturedRow.splice(tileIndex, 1, createTile(tile.dark, false, tile.tile));\n\n  // @ts-ignore\n  spreadBoard.splice(boardIndex, 1, capturedRow);\n\n  // add piece to new location\n  const [boardIndex2, tileIndex2] = findTileIndex(board, newTile);\n  const capturedRow2 = [...spreadBoard[boardIndex2]];\n  capturedRow2.splice(tileIndex2, 1, createTile(tile.dark, tile.white, tile.tile, tile.piece));\n\n  // @ts-ignore\n  spreadBoard.splice(boardIndex2, 1, capturedRow2);\n  console.log(boardIndex, tileIndex, boardIndex2, tileIndex2, capturedRow, capturedRow2);\n\n  // @ts-ignore\n  return spreadBoard;\n};\nexport default movePiece;","map":{"version":3,"names":["createTile","findTileIndex","movePiece","board","tile","newTile","spreadBoard","boardIndex","tileIndex","capturedRow","splice","dark","boardIndex2","tileIndex2","capturedRow2","white","piece","console","log"],"sources":["/home/domuen/Documents/random code/chess-js/src/helpers/move-piece.ts"],"sourcesContent":["import { ChessBoard, ColumnString, RowNumber, Tile } from \"../types\";\nimport createTile from \"./create-tile\";\nimport findTileIndex from \"./find-tile-index\";\n\nconst movePiece = (board: ChessBoard, tile: Tile, newTile: Tile): ChessBoard => {\n  const spreadBoard = [...board];\n\n  const [boardIndex, tileIndex] = findTileIndex(board, tile);\n\n  // remove piece from old location\n  const capturedRow = [...spreadBoard[boardIndex!]];\n  capturedRow.splice(tileIndex!, 1, createTile(tile.dark, false, tile.tile));\n\n  // @ts-ignore\n  spreadBoard.splice(boardIndex!, 1, capturedRow);\n\n  // add piece to new location\n  const [boardIndex2, tileIndex2] = findTileIndex(board, newTile);\n\n  const capturedRow2 = [...spreadBoard[boardIndex2!]];\n  capturedRow2.splice(tileIndex2!, 1, createTile(tile.dark, tile.white, tile.tile, tile.piece!));\n\n  // @ts-ignore\n  spreadBoard.splice(boardIndex2!, 1, capturedRow2);\n\n  console.log(boardIndex, tileIndex, boardIndex2, tileIndex2, capturedRow, capturedRow2);\n\n  // @ts-ignore\n  return spreadBoard;\n};\n\nexport default movePiece;\n"],"mappings":"AACA,OAAOA,UAAU,MAAM,eAAe;AACtC,OAAOC,aAAa,MAAM,mBAAmB;AAE7C,MAAMC,SAAS,GAAGA,CAACC,KAAiB,EAAEC,IAAU,EAAEC,OAAa,KAAiB;EAC9E,MAAMC,WAAW,GAAG,CAAC,GAAGH,KAAK,CAAC;EAE9B,MAAM,CAACI,UAAU,EAAEC,SAAS,CAAC,GAAGP,aAAa,CAACE,KAAK,EAAEC,IAAI,CAAC;;EAE1D;EACA,MAAMK,WAAW,GAAG,CAAC,GAAGH,WAAW,CAACC,UAAU,CAAE,CAAC;EACjDE,WAAW,CAACC,MAAM,CAACF,SAAS,EAAG,CAAC,EAAER,UAAU,CAACI,IAAI,CAACO,IAAI,EAAE,KAAK,EAAEP,IAAI,CAACA,IAAI,CAAC,CAAC;;EAE1E;EACAE,WAAW,CAACI,MAAM,CAACH,UAAU,EAAG,CAAC,EAAEE,WAAW,CAAC;;EAE/C;EACA,MAAM,CAACG,WAAW,EAAEC,UAAU,CAAC,GAAGZ,aAAa,CAACE,KAAK,EAAEE,OAAO,CAAC;EAE/D,MAAMS,YAAY,GAAG,CAAC,GAAGR,WAAW,CAACM,WAAW,CAAE,CAAC;EACnDE,YAAY,CAACJ,MAAM,CAACG,UAAU,EAAG,CAAC,EAAEb,UAAU,CAACI,IAAI,CAACO,IAAI,EAAEP,IAAI,CAACW,KAAK,EAAEX,IAAI,CAACA,IAAI,EAAEA,IAAI,CAACY,KAAM,CAAC,CAAC;;EAE9F;EACAV,WAAW,CAACI,MAAM,CAACE,WAAW,EAAG,CAAC,EAAEE,YAAY,CAAC;EAEjDG,OAAO,CAACC,GAAG,CAACX,UAAU,EAAEC,SAAS,EAAEI,WAAW,EAAEC,UAAU,EAAEJ,WAAW,EAAEK,YAAY,CAAC;;EAEtF;EACA,OAAOR,WAAW;AACpB,CAAC;AAED,eAAeJ,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}