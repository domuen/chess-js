{"ast":null,"code":"const letterArray = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"];\nconst mathLetter = function (letter, operator) {\n  let amount = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  const add = operator === \"+\";\n  const index = letterArray.indexOf(letter);\n  // return letterArray.splice(add ? (index + amount) : (index - amount), 1);\n  return letterArray[add ? index + amount : index - amount];\n};\nexport default mathLetter;","map":{"version":3,"names":["letterArray","mathLetter","letter","operator","amount","arguments","length","undefined","add","index","indexOf"],"sources":["/home/domuen/Documents/random code/chess-js/src/helpers/math-letter.ts"],"sourcesContent":["import { ColumnString } from \"../types\";\n\nconst letterArray: ColumnString[] = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"];\n\nconst mathLetter = (letter: ColumnString, operator: \"+\" | \"-\", amount: number = 1) => {\n  const add = operator === \"+\";\n\n  const index = letterArray.indexOf(letter);\n  // return letterArray.splice(add ? (index + amount) : (index - amount), 1);\n  return letterArray[add ? (index + amount) : (index - amount)];\n}\n\nexport default mathLetter;\n"],"mappings":"AAEA,MAAMA,WAA2B,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;AAE5E,MAAMC,UAAU,GAAG,SAAAA,CAACC,MAAoB,EAAEC,QAAmB,EAAyB;EAAA,IAAvBC,MAAc,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;EAC/E,MAAMG,GAAG,GAAGL,QAAQ,KAAK,GAAG;EAE5B,MAAMM,KAAK,GAAGT,WAAW,CAACU,OAAO,CAACR,MAAM,CAAC;EACzC;EACA,OAAOF,WAAW,CAACQ,GAAG,GAAIC,KAAK,GAAGL,MAAM,GAAKK,KAAK,GAAGL,MAAO,CAAC;AAC/D,CAAC;AAED,eAAeH,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}