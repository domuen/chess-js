{"ast":null,"code":"var _jsxFileName = \"/home/domuen/Documents/random code/chess-js/src/components/ChessBoard.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport initializeBoard from \"../helpers/initialize-board\";\nimport Tile from \"../components/Tile\";\nimport \"../css/ChessBoard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst boardArray = initializeBoard();\nexport default _s(props => {\n  _s();\n  const [selectedTile, setSelectedTile] = React.useState(undefined);\n  const renderTile = t => {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Tile, {\n        tile: t\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }, this)\n    }, t.tile.join(\",\"), false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: boardArray.map((c, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: c.map(renderTile)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 10\n  }, this);\n}, \"vs49hBScqAx87lxWj5rxVLgzw0Q=\");","map":{"version":3,"names":["React","initializeBoard","Tile","jsxDEV","_jsxDEV","boardArray","_s","props","selectedTile","setSelectedTile","useState","undefined","renderTile","t","Fragment","children","tile","fileName","_jsxFileName","lineNumber","columnNumber","join","className","map","c","i"],"sources":["/home/domuen/Documents/random code/chess-js/src/components/ChessBoard.tsx"],"sourcesContent":["import React from \"react\";\nimport initializeBoard from \"../helpers/initialize-board\";\nimport Tile from \"../components/Tile\";\n\nimport \"../css/ChessBoard.css\";\nimport { ChessBoard, ColumnString, RowNumber } from \"../types\";\n\ninterface Props { }\n\ntype SelectedTile = [ColumnString, RowNumber] | undefined;\n\nconst boardArray: ChessBoard = initializeBoard();\n\nexport default (props: Props) => {\n\n  const [selectedTile, setSelectedTile] = React.useState<SelectedTile>(undefined);\n\n  const renderTile = (t: any) => {\n    return <React.Fragment key={t.tile.join(\",\")}>\n      <Tile tile={t} />\n    </React.Fragment>\n  }\n\n  return <React.Fragment>\n    <div className=\"container\">\n      {boardArray.map((c, i) => (\n        <div key={i} className=\"row\">\n          {c.map(renderTile)}\n        </div>\n      ))}\n    </div>\n  </React.Fragment>;\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,eAAe,MAAM,6BAA6B;AACzD,OAAOC,IAAI,MAAM,oBAAoB;AAErC,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO/B,MAAMC,UAAsB,GAAGJ,eAAe,CAAC,CAAC;AAEhD,eAAAK,EAAA,CAAgBC,KAAY,IAAK;EAAAD,EAAA;EAE/B,MAAM,CAACE,YAAY,EAAEC,eAAe,CAAC,GAAGT,KAAK,CAACU,QAAQ,CAAeC,SAAS,CAAC;EAE/E,MAAMC,UAAU,GAAIC,CAAM,IAAK;IAC7B,oBAAOT,OAAA,CAACJ,KAAK,CAACc,QAAQ;MAAAC,QAAA,eACpBX,OAAA,CAACF,IAAI;QAACc,IAAI,EAAEH;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,GADSP,CAAC,CAACG,IAAI,CAACK,IAAI,CAAC,GAAG,CAAC;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE5B,CAAC;EACnB,CAAC;EAED,oBAAOhB,OAAA,CAACJ,KAAK,CAACc,QAAQ;IAAAC,QAAA,eACpBX,OAAA;MAAKkB,SAAS,EAAC,WAAW;MAAAP,QAAA,EACvBV,UAAU,CAACkB,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,kBACnBrB,OAAA;QAAakB,SAAS,EAAC,KAAK;QAAAP,QAAA,EACzBS,CAAC,CAACD,GAAG,CAACX,UAAU;MAAC,GADVa,CAAC;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEN,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AACnB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}