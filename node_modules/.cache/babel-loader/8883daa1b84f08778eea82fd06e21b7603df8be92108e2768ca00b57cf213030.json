{"ast":null,"code":"import mL from \"./math-letter\";\n\n// currently hard coding move checks\n// will eventually switch to loops\n// also need conditional moves such as \n// pawn takes and preventing king check moves\n\nconst numArrIndex = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"];\nconst checkAndPush = () => {};\nconst getKingMoves = (board, tile) => {\n  const moveArray = [];\n  const l = tile.tile[0];\n  const n = tile.tile[1];\n  moveArray.push([mL(l, \"-\"), n + 1]);\n  moveArray.push([l, n + 1]);\n  moveArray.push([mL(l, \"+\"), n + 1]);\n  moveArray.push([mL(l, \"-\"), n]);\n  moveArray.push([mL(l, \"+\"), n]);\n  moveArray.push([mL(l, \"-\"), n - 1]);\n  moveArray.push([l, n - 1]);\n  moveArray.push([mL(l, \"+\"), n - 1]);\n  return moveArray.filter(t => !!t[0] && !!t[1]);\n};\nconst getPawnMoves = (board, tile) => {\n  const moveArray = [];\n  const l = tile.tile[0];\n  const n = tile.tile[1];\n  moveArray.push([l, n + 1]);\n  moveArray.push([l, n + 2]);\n  let index;\n  const foundTile = board.find(r => r.some((t, i) => {\n    if (t.tile[0] === tile.tile[0] && t.tile[1] === tile.tile[1]) {\n      index = i; // capture index and break\n      return true;\n    }\n  }));\n  const leftDiagonal = foundTile === null || foundTile === void 0 ? void 0 : foundTile[index - 1];\n  if ((leftDiagonal === null || leftDiagonal === void 0 ? void 0 : leftDiagonal.white) !== tile.white) moveArray.push([mL(l, \"-\"), n + 1]);\n  return moveArray.filter(t => !!t[0] && !!t[1]);\n};\nconst getKnightMoves = (board, tile) => {\n  const moveArray = [];\n  const l = tile.tile[0];\n  const n = tile.tile[1];\n  moveArray.push([mL(l, \"-\"), n + 2]);\n  moveArray.push([mL(l, \"+\"), n + 2]);\n  moveArray.push([mL(l, \"+\", 2), n + 1]);\n  moveArray.push([mL(l, \"+\", 2), n - 1]);\n  moveArray.push([mL(l, \"+\"), n - 2]);\n  moveArray.push([mL(l, \"-\"), n - 2]);\n  moveArray.push([mL(l, \"-\", 2), n - 1]);\n  moveArray.push([mL(l, \"-\", 2), n + 1]);\n  return moveArray.filter(t => !!t[0] && !!t[1]);\n};\nconst getBishopMoves = (board, tile) => {\n  const moveArray = [];\n  const l = tile.tile[0];\n  const n = tile.tile[1];\n  moveArray.push([mL(l, \"+\"), n + 1]);\n  moveArray.push([mL(l, \"+\", 2), n + 2]);\n  moveArray.push([mL(l, \"+\", 3), n + 3]);\n  moveArray.push([mL(l, \"+\", 4), n + 4]);\n  moveArray.push([mL(l, \"+\", 5), n + 5]);\n  moveArray.push([mL(l, \"+\", 6), n + 6]);\n  moveArray.push([mL(l, \"+\", 7), n + 7]);\n  moveArray.push([mL(l, \"+\"), n - 1]);\n  moveArray.push([mL(l, \"+\", 2), n - 2]);\n  moveArray.push([mL(l, \"+\", 3), n - 3]);\n  moveArray.push([mL(l, \"+\", 4), n - 4]);\n  moveArray.push([mL(l, \"+\", 5), n - 5]);\n  moveArray.push([mL(l, \"+\", 6), n - 6]);\n  moveArray.push([mL(l, \"+\", 7), n - 7]);\n  moveArray.push([mL(l, \"-\"), n - 1]);\n  moveArray.push([mL(l, \"-\", 2), n - 2]);\n  moveArray.push([mL(l, \"-\", 3), n - 3]);\n  moveArray.push([mL(l, \"-\", 4), n - 4]);\n  moveArray.push([mL(l, \"-\", 5), n - 5]);\n  moveArray.push([mL(l, \"-\", 6), n - 6]);\n  moveArray.push([mL(l, \"-\", 7), n - 7]);\n  moveArray.push([mL(l, \"-\"), n + 1]);\n  moveArray.push([mL(l, \"-\", 2), n + 2]);\n  moveArray.push([mL(l, \"-\", 3), n + 3]);\n  moveArray.push([mL(l, \"-\", 4), n + 4]);\n  moveArray.push([mL(l, \"-\", 5), n + 5]);\n  moveArray.push([mL(l, \"-\", 6), n + 6]);\n  moveArray.push([mL(l, \"-\", 7), n + 7]);\n  return moveArray.filter(t => !!t[0] && !!t[1]);\n};\nconst getRookMoves = (board, tile) => {\n  const moveArray = [];\n  const l = tile.tile[0];\n  const n = tile.tile[1];\n  moveArray.push([l, n + 1]);\n  moveArray.push([l, n + 2]);\n  moveArray.push([l, n + 3]);\n  moveArray.push([l, n + 4]);\n  moveArray.push([l, n + 5]);\n  moveArray.push([l, n + 6]);\n  moveArray.push([l, n + 7]);\n  moveArray.push([mL(l, \"+\"), n]);\n  moveArray.push([mL(l, \"+\", 2), n]);\n  moveArray.push([mL(l, \"+\", 3), n]);\n  moveArray.push([mL(l, \"+\", 4), n]);\n  moveArray.push([mL(l, \"+\", 5), n]);\n  moveArray.push([mL(l, \"+\", 6), n]);\n  moveArray.push([mL(l, \"+\", 7), n]);\n  moveArray.push([l, n - 1]);\n  moveArray.push([l, n - 2]);\n  moveArray.push([l, n - 3]);\n  moveArray.push([l, n - 4]);\n  moveArray.push([l, n - 5]);\n  moveArray.push([l, n - 6]);\n  moveArray.push([l, n - 7]);\n  moveArray.push([mL(l, \"-\"), n]);\n  moveArray.push([mL(l, \"-\", 2), n]);\n  moveArray.push([mL(l, \"-\", 3), n]);\n  moveArray.push([mL(l, \"-\", 4), n]);\n  moveArray.push([mL(l, \"-\", 5), n]);\n  moveArray.push([mL(l, \"-\", 6), n]);\n  moveArray.push([mL(l, \"-\", 7), n]);\n  return moveArray.filter(t => !!t[0] && !!t[1]);\n};\nconst getQueenMoves = (board, tile) => {\n  const moveArray = [];\n  const l = tile.tile[0];\n  const n = tile.tile[1];\n\n  // top\n  moveArray.push([l, n + 1]);\n  moveArray.push([l, n + 2]);\n  moveArray.push([l, n + 3]);\n  moveArray.push([l, n + 4]);\n  moveArray.push([l, n + 5]);\n  moveArray.push([l, n + 6]);\n  moveArray.push([l, n + 7]);\n\n  // top right diagonal\n  moveArray.push([mL(l, \"+\"), n + 1]);\n  moveArray.push([mL(l, \"+\", 2), n + 2]);\n  moveArray.push([mL(l, \"+\", 3), n + 3]);\n  moveArray.push([mL(l, \"+\", 4), n + 4]);\n  moveArray.push([mL(l, \"+\", 5), n + 5]);\n  moveArray.push([mL(l, \"+\", 6), n + 6]);\n  moveArray.push([mL(l, \"+\", 7), n + 7]);\n\n  // right\n  moveArray.push([mL(l, \"+\"), n]);\n  moveArray.push([mL(l, \"+\", 2), n]);\n  moveArray.push([mL(l, \"+\", 3), n]);\n  moveArray.push([mL(l, \"+\", 4), n]);\n  moveArray.push([mL(l, \"+\", 5), n]);\n  moveArray.push([mL(l, \"+\", 6), n]);\n  moveArray.push([mL(l, \"+\", 7), n]);\n\n  // bottom right diagonal\n  moveArray.push([mL(l, \"+\"), n - 1]);\n  moveArray.push([mL(l, \"+\", 2), n - 2]);\n  moveArray.push([mL(l, \"+\", 3), n - 3]);\n  moveArray.push([mL(l, \"+\", 4), n - 4]);\n  moveArray.push([mL(l, \"+\", 5), n - 5]);\n  moveArray.push([mL(l, \"+\", 6), n - 6]);\n  moveArray.push([mL(l, \"+\", 7), n - 7]);\n\n  // bottom\n  moveArray.push([l, n - 1]);\n  moveArray.push([l, n - 2]);\n  moveArray.push([l, n - 3]);\n  moveArray.push([l, n - 4]);\n  moveArray.push([l, n - 5]);\n  moveArray.push([l, n - 6]);\n  moveArray.push([l, n - 7]);\n\n  // bottom left diagonal\n  moveArray.push([mL(l, \"-\"), n - 1]);\n  moveArray.push([mL(l, \"-\", 2), n - 2]);\n  moveArray.push([mL(l, \"-\", 3), n - 3]);\n  moveArray.push([mL(l, \"-\", 4), n - 4]);\n  moveArray.push([mL(l, \"-\", 5), n - 5]);\n  moveArray.push([mL(l, \"-\", 6), n - 6]);\n  moveArray.push([mL(l, \"-\", 7), n - 7]);\n\n  // left\n  moveArray.push([mL(l, \"-\"), n]);\n  moveArray.push([mL(l, \"-\", 2), n]);\n  moveArray.push([mL(l, \"-\", 3), n]);\n  moveArray.push([mL(l, \"-\", 4), n]);\n  moveArray.push([mL(l, \"-\", 5), n]);\n  moveArray.push([mL(l, \"-\", 6), n]);\n  moveArray.push([mL(l, \"-\", 7), n]);\n\n  // top left diagonal\n  moveArray.push([mL(l, \"-\"), n + 1]);\n  moveArray.push([mL(l, \"-\", 2), n + 2]);\n  moveArray.push([mL(l, \"-\", 3), n + 3]);\n  moveArray.push([mL(l, \"-\", 4), n + 4]);\n  moveArray.push([mL(l, \"-\", 5), n + 5]);\n  moveArray.push([mL(l, \"-\", 6), n + 6]);\n  moveArray.push([mL(l, \"-\", 7), n + 7]);\n  return moveArray.filter(t => !!t[0] && !!t[1]);\n};\nconst findMoveTiles = (board, tile) => {\n  if (tile.piece === 0) return getKingMoves(board, tile);\n  if (tile.piece === 1) return getPawnMoves(board, tile);\n  if (tile.piece === 2) return getKnightMoves(board, tile);\n  if (tile.piece === 3) return getBishopMoves(board, tile);\n  if (tile.piece === 4) return getRookMoves(board, tile);\n  if (tile.piece === 5) return getQueenMoves(board, tile);\n};\nexport default findMoveTiles;","map":{"version":3,"names":["mL","numArrIndex","checkAndPush","getKingMoves","board","tile","moveArray","l","n","push","filter","t","getPawnMoves","index","foundTile","find","r","some","i","leftDiagonal","white","getKnightMoves","getBishopMoves","getRookMoves","getQueenMoves","findMoveTiles","piece"],"sources":["/home/domuen/Documents/random code/chess-js/src/helpers/find-move-tiles.ts"],"sourcesContent":["import { PieceID, ColumnString, RowNumber, ChessBoard, Tile } from \"../types\";\nimport mL from \"./math-letter\";\n\n// currently hard coding move checks\n// will eventually switch to loops\n// also need conditional moves such as \n// pawn takes and preventing king check moves\n\nconst numArrIndex = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"];\n\nconst checkAndPush = () => { };\n\nconst getKingMoves = (board: ChessBoard, tile: Tile) => {\n  const moveArray = [];\n\n  const l = tile.tile[0];\n  const n = tile.tile[1];\n\n  moveArray.push([mL(l, \"-\"), n + 1]);\n  moveArray.push([l, n + 1]);\n  moveArray.push([mL(l, \"+\"), n + 1]);\n  moveArray.push([mL(l, \"-\"), n]);\n  moveArray.push([mL(l, \"+\"), n]);\n  moveArray.push([mL(l, \"-\"), n - 1]);\n  moveArray.push([l, n - 1]);\n  moveArray.push([mL(l, \"+\"), n - 1]);\n\n  return moveArray.filter(t => (!!t[0] && !!t[1]));\n};\n\nconst getPawnMoves = (board: ChessBoard, tile: Tile) => {\n  const moveArray = [];\n\n  const l = tile.tile[0];\n  const n = tile.tile[1];\n\n  moveArray.push([l, n + 1]);\n  moveArray.push([l, n + 2]);\n\n  let index: number | undefined;\n  const foundTile = board.find(r => r.some((t, i) => {\n    if ((t.tile[0] === tile.tile[0]) && (t.tile[1] === tile.tile[1])) {\n      index = i; // capture index and break\n      return true;\n    }\n  }));\n  const leftDiagonal = foundTile?.[index! - 1];\n\n  if (leftDiagonal?.white !== tile.white) moveArray.push([mL(l, \"-\"), n + 1]);\n\n  return moveArray.filter(t => (!!t[0] && !!t[1]));\n};\n\nconst getKnightMoves = (board: ChessBoard, tile: Tile) => {\n  const moveArray: any[] = [];\n\n  const l = tile.tile[0];\n  const n = tile.tile[1];\n\n  moveArray.push([mL(l, \"-\"), n + 2]);\n  moveArray.push([mL(l, \"+\"), n + 2]);\n  moveArray.push([mL(l, \"+\", 2), n + 1]);\n  moveArray.push([mL(l, \"+\", 2), n - 1]);\n  moveArray.push([mL(l, \"+\"), n - 2]);\n  moveArray.push([mL(l, \"-\"), n - 2]);\n  moveArray.push([mL(l, \"-\", 2), n - 1]);\n  moveArray.push([mL(l, \"-\", 2), n + 1]);\n\n  return moveArray.filter(t => (!!t[0] && !!t[1]));\n\n};\n\nconst getBishopMoves = (board: ChessBoard, tile: Tile) => {\n  const moveArray: any[] = [];\n\n  const l = tile.tile[0];\n  const n = tile.tile[1];\n\n  moveArray.push([mL(l, \"+\"), n + 1]);\n  moveArray.push([mL(l, \"+\", 2), n + 2]);\n  moveArray.push([mL(l, \"+\", 3), n + 3]);\n  moveArray.push([mL(l, \"+\", 4), n + 4]);\n  moveArray.push([mL(l, \"+\", 5), n + 5]);\n  moveArray.push([mL(l, \"+\", 6), n + 6]);\n  moveArray.push([mL(l, \"+\", 7), n + 7]);\n\n  moveArray.push([mL(l, \"+\"), n - 1]);\n  moveArray.push([mL(l, \"+\", 2), n - 2]);\n  moveArray.push([mL(l, \"+\", 3), n - 3]);\n  moveArray.push([mL(l, \"+\", 4), n - 4]);\n  moveArray.push([mL(l, \"+\", 5), n - 5]);\n  moveArray.push([mL(l, \"+\", 6), n - 6]);\n  moveArray.push([mL(l, \"+\", 7), n - 7]);\n\n  moveArray.push([mL(l, \"-\"), n - 1]);\n  moveArray.push([mL(l, \"-\", 2), n - 2]);\n  moveArray.push([mL(l, \"-\", 3), n - 3]);\n  moveArray.push([mL(l, \"-\", 4), n - 4]);\n  moveArray.push([mL(l, \"-\", 5), n - 5]);\n  moveArray.push([mL(l, \"-\", 6), n - 6]);\n  moveArray.push([mL(l, \"-\", 7), n - 7]);\n\n  moveArray.push([mL(l, \"-\"), n + 1]);\n  moveArray.push([mL(l, \"-\", 2), n + 2]);\n  moveArray.push([mL(l, \"-\", 3), n + 3]);\n  moveArray.push([mL(l, \"-\", 4), n + 4]);\n  moveArray.push([mL(l, \"-\", 5), n + 5]);\n  moveArray.push([mL(l, \"-\", 6), n + 6]);\n  moveArray.push([mL(l, \"-\", 7), n + 7]);\n\n  return moveArray.filter(t => (!!t[0] && !!t[1]));\n\n};\n\nconst getRookMoves = (board: ChessBoard, tile: Tile) => {\n  const moveArray: any[] = [];\n\n  const l = tile.tile[0];\n  const n = tile.tile[1];\n\n  moveArray.push([l, n + 1]);\n  moveArray.push([l, n + 2]);\n  moveArray.push([l, n + 3]);\n  moveArray.push([l, n + 4]);\n  moveArray.push([l, n + 5]);\n  moveArray.push([l, n + 6]);\n  moveArray.push([l, n + 7]);\n\n  moveArray.push([mL(l, \"+\"), n]);\n  moveArray.push([mL(l, \"+\", 2), n]);\n  moveArray.push([mL(l, \"+\", 3), n]);\n  moveArray.push([mL(l, \"+\", 4), n]);\n  moveArray.push([mL(l, \"+\", 5), n]);\n  moveArray.push([mL(l, \"+\", 6), n]);\n  moveArray.push([mL(l, \"+\", 7), n]);\n\n  moveArray.push([l, n - 1]);\n  moveArray.push([l, n - 2]);\n  moveArray.push([l, n - 3]);\n  moveArray.push([l, n - 4]);\n  moveArray.push([l, n - 5]);\n  moveArray.push([l, n - 6]);\n  moveArray.push([l, n - 7]);\n\n  moveArray.push([mL(l, \"-\"), n]);\n  moveArray.push([mL(l, \"-\", 2), n]);\n  moveArray.push([mL(l, \"-\", 3), n]);\n  moveArray.push([mL(l, \"-\", 4), n]);\n  moveArray.push([mL(l, \"-\", 5), n]);\n  moveArray.push([mL(l, \"-\", 6), n]);\n  moveArray.push([mL(l, \"-\", 7), n]);\n\n  return moveArray.filter(t => (!!t[0] && !!t[1]));\n\n};\n\nconst getQueenMoves = (board: ChessBoard, tile: Tile) => {\n  const moveArray: any[] = [];\n\n  const l = tile.tile[0];\n  const n = tile.tile[1];\n\n  // top\n  moveArray.push([l, n + 1]);\n  moveArray.push([l, n + 2]);\n  moveArray.push([l, n + 3]);\n  moveArray.push([l, n + 4]);\n  moveArray.push([l, n + 5]);\n  moveArray.push([l, n + 6]);\n  moveArray.push([l, n + 7]);\n\n  // top right diagonal\n  moveArray.push([mL(l, \"+\"), n + 1]);\n  moveArray.push([mL(l, \"+\", 2), n + 2]);\n  moveArray.push([mL(l, \"+\", 3), n + 3]);\n  moveArray.push([mL(l, \"+\", 4), n + 4]);\n  moveArray.push([mL(l, \"+\", 5), n + 5]);\n  moveArray.push([mL(l, \"+\", 6), n + 6]);\n  moveArray.push([mL(l, \"+\", 7), n + 7]);\n\n  // right\n  moveArray.push([mL(l, \"+\"), n]);\n  moveArray.push([mL(l, \"+\", 2), n]);\n  moveArray.push([mL(l, \"+\", 3), n]);\n  moveArray.push([mL(l, \"+\", 4), n]);\n  moveArray.push([mL(l, \"+\", 5), n]);\n  moveArray.push([mL(l, \"+\", 6), n]);\n  moveArray.push([mL(l, \"+\", 7), n]);\n\n  // bottom right diagonal\n  moveArray.push([mL(l, \"+\"), n - 1]);\n  moveArray.push([mL(l, \"+\", 2), n - 2]);\n  moveArray.push([mL(l, \"+\", 3), n - 3]);\n  moveArray.push([mL(l, \"+\", 4), n - 4]);\n  moveArray.push([mL(l, \"+\", 5), n - 5]);\n  moveArray.push([mL(l, \"+\", 6), n - 6]);\n  moveArray.push([mL(l, \"+\", 7), n - 7]);\n\n  // bottom\n  moveArray.push([l, n - 1]);\n  moveArray.push([l, n - 2]);\n  moveArray.push([l, n - 3]);\n  moveArray.push([l, n - 4]);\n  moveArray.push([l, n - 5]);\n  moveArray.push([l, n - 6]);\n  moveArray.push([l, n - 7]);\n\n  // bottom left diagonal\n  moveArray.push([mL(l, \"-\"), n - 1]);\n  moveArray.push([mL(l, \"-\", 2), n - 2]);\n  moveArray.push([mL(l, \"-\", 3), n - 3]);\n  moveArray.push([mL(l, \"-\", 4), n - 4]);\n  moveArray.push([mL(l, \"-\", 5), n - 5]);\n  moveArray.push([mL(l, \"-\", 6), n - 6]);\n  moveArray.push([mL(l, \"-\", 7), n - 7]);\n\n  // left\n  moveArray.push([mL(l, \"-\"), n]);\n  moveArray.push([mL(l, \"-\", 2), n]);\n  moveArray.push([mL(l, \"-\", 3), n]);\n  moveArray.push([mL(l, \"-\", 4), n]);\n  moveArray.push([mL(l, \"-\", 5), n]);\n  moveArray.push([mL(l, \"-\", 6), n]);\n  moveArray.push([mL(l, \"-\", 7), n]);\n\n  // top left diagonal\n  moveArray.push([mL(l, \"-\"), n + 1]);\n  moveArray.push([mL(l, \"-\", 2), n + 2]);\n  moveArray.push([mL(l, \"-\", 3), n + 3]);\n  moveArray.push([mL(l, \"-\", 4), n + 4]);\n  moveArray.push([mL(l, \"-\", 5), n + 5]);\n  moveArray.push([mL(l, \"-\", 6), n + 6]);\n  moveArray.push([mL(l, \"-\", 7), n + 7]);\n\n  return moveArray.filter(t => (!!t[0] && !!t[1]));\n\n};\n\nconst findMoveTiles = (board: ChessBoard, tile: Tile) => {\n  if (tile.piece === 0) return getKingMoves(board, tile);\n  if (tile.piece === 1) return getPawnMoves(board, tile);\n  if (tile.piece === 2) return getKnightMoves(board, tile);\n  if (tile.piece === 3) return getBishopMoves(board, tile);\n  if (tile.piece === 4) return getRookMoves(board, tile);\n  if (tile.piece === 5) return getQueenMoves(board, tile);\n}\n\nexport default findMoveTiles;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}