{"ast":null,"code":"var _jsxFileName = \"/home/domuen/Documents/random code/chess-js/src/components/Tile.tsx\";\nimport React from \"react\";\nimport cn from \"classnames\";\nimport getTileAsset from \"../helpers/get-tile-assets\";\nimport findMoveTiles from \"../helpers/find-move-tiles\";\nimport movePiece from \"../helpers/move-piece\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _c2 = /*#__PURE__*/React.memo(_c = props => {\n  var _props$selectedTile;\n  const tile = props.tile;\n  const tileAsset = getTileAsset(tile.piece);\n  const moveable = props.isMoveable;\n  const selectable = !isNaN(tile.piece);\n  const selected = ((_props$selectedTile = props.selectedTile) === null || _props$selectedTile === void 0 ? void 0 : _props$selectedTile.tile) === tile.tile;\n  const dark = !selected && !moveable && tile.dark;\n  const handleClick = () => {\n    // if (!selectable) return;\n\n    if (moveable && !!props.selectedTile) {\n      const newBoard = movePiece(props.board, props.selectedTile, tile);\n      props.setBoard(newBoard);\n      props.setSelectedTile(undefined);\n      return props.setMoveTiles(undefined);\n    }\n    const moveTiles = findMoveTiles(props.board, tile);\n    props.setSelectedTile(tile);\n    props.setMoveTiles(moveTiles);\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cn(\"tile\", {\n        dark\n      }, {\n        selected\n      }, {\n        selectable\n      }, {\n        moveable\n      }),\n      onClick: handleClick,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: tileAsset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 10\n  }, this);\n});\nvar _c, _c2;\n$RefreshReg$(_c, \"%default%$React.memo\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","cn","getTileAsset","findMoveTiles","movePiece","jsxDEV","_jsxDEV","_c2","memo","_c","props","_props$selectedTile","tile","tileAsset","piece","moveable","isMoveable","selectable","isNaN","selected","selectedTile","dark","handleClick","newBoard","board","setBoard","setSelectedTile","undefined","setMoveTiles","moveTiles","Fragment","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","$RefreshReg$"],"sources":["/home/domuen/Documents/random code/chess-js/src/components/Tile.tsx"],"sourcesContent":["import React from \"react\";\nimport { Tile, SelectedTile, ChessBoard } from \"../types\";\nimport cn from \"classnames\";\nimport getTileAsset from \"../helpers/get-tile-assets\";\nimport findMoveTiles from \"../helpers/find-move-tiles\";\nimport movePiece from \"../helpers/move-piece\";\n\ninterface Props {\n  tile: Tile;\n  selectedTile: SelectedTile;\n  isMoveable: boolean;\n  board: ChessBoard;\n  setBoard: any;\n\n  setSelectedTile: any;\n  setMoveTiles: any;\n}\n\nexport default React.memo<Props>((props) => {\n\n  const tile = props.tile;\n\n  const tileAsset = getTileAsset(tile.piece);\n\n  const moveable = props.isMoveable;\n  const selectable = !isNaN(tile.piece!);\n  const selected = props.selectedTile?.tile === tile.tile;\n  const dark = (!selected && !moveable && tile.dark);\n\n  const handleClick = () => {\n    // if (!selectable) return;\n\n    if (moveable && !!props.selectedTile) {\n      const newBoard = movePiece(\n        props.board, props.selectedTile, tile\n      );\n\n      props.setBoard(newBoard);\n\n      props.setSelectedTile(undefined);\n      return props.setMoveTiles(undefined);\n    }\n\n    const moveTiles = findMoveTiles(props.board, tile);\n\n    props.setSelectedTile(tile);\n    props.setMoveTiles(moveTiles);\n  }\n\n  return <React.Fragment>\n    <div className={cn(\"tile\", { dark }, { selected }, { selectable }, { moveable })} onClick={handleClick}>\n      <p>{tileAsset}</p>\n    </div>\n  </React.Fragment>;\n});\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,EAAE,MAAM,YAAY;AAC3B,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,SAAS,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAa9C,eAAAC,GAAA,gBAAeP,KAAK,CAACQ,IAAI,CAAAC,EAAA,GAASC,KAAK,IAAK;EAAA,IAAAC,mBAAA;EAE1C,MAAMC,IAAI,GAAGF,KAAK,CAACE,IAAI;EAEvB,MAAMC,SAAS,GAAGX,YAAY,CAACU,IAAI,CAACE,KAAK,CAAC;EAE1C,MAAMC,QAAQ,GAAGL,KAAK,CAACM,UAAU;EACjC,MAAMC,UAAU,GAAG,CAACC,KAAK,CAACN,IAAI,CAACE,KAAM,CAAC;EACtC,MAAMK,QAAQ,GAAG,EAAAR,mBAAA,GAAAD,KAAK,CAACU,YAAY,cAAAT,mBAAA,uBAAlBA,mBAAA,CAAoBC,IAAI,MAAKA,IAAI,CAACA,IAAI;EACvD,MAAMS,IAAI,GAAI,CAACF,QAAQ,IAAI,CAACJ,QAAQ,IAAIH,IAAI,CAACS,IAAK;EAElD,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB;;IAEA,IAAIP,QAAQ,IAAI,CAAC,CAACL,KAAK,CAACU,YAAY,EAAE;MACpC,MAAMG,QAAQ,GAAGnB,SAAS,CACxBM,KAAK,CAACc,KAAK,EAAEd,KAAK,CAACU,YAAY,EAAER,IACnC,CAAC;MAEDF,KAAK,CAACe,QAAQ,CAACF,QAAQ,CAAC;MAExBb,KAAK,CAACgB,eAAe,CAACC,SAAS,CAAC;MAChC,OAAOjB,KAAK,CAACkB,YAAY,CAACD,SAAS,CAAC;IACtC;IAEA,MAAME,SAAS,GAAG1B,aAAa,CAACO,KAAK,CAACc,KAAK,EAAEZ,IAAI,CAAC;IAElDF,KAAK,CAACgB,eAAe,CAACd,IAAI,CAAC;IAC3BF,KAAK,CAACkB,YAAY,CAACC,SAAS,CAAC;EAC/B,CAAC;EAED,oBAAOvB,OAAA,CAACN,KAAK,CAAC8B,QAAQ;IAAAC,QAAA,eACpBzB,OAAA;MAAK0B,SAAS,EAAE/B,EAAE,CAAC,MAAM,EAAE;QAAEoB;MAAK,CAAC,EAAE;QAAEF;MAAS,CAAC,EAAE;QAAEF;MAAW,CAAC,EAAE;QAAEF;MAAS,CAAC,CAAE;MAACkB,OAAO,EAAEX,WAAY;MAAAS,QAAA,eACrGzB,OAAA;QAAAyB,QAAA,EAAIlB;MAAS;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AACnB,CAAC,CAAC;AAAC,IAAA5B,EAAA,EAAAF,GAAA;AAAA+B,YAAA,CAAA7B,EAAA;AAAA6B,YAAA,CAAA/B,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}