{"ast":null,"code":"import mathLetter from \"./math-letter\";\nconst getKingMoves = tile => {\n  const moveArray = [];\n  const l = tile[0];\n  const n = tile[1];\n  moveArray.push([mathLetter(l, \"-\"), n + 1]);\n  moveArray.push([l, n + 1]);\n  moveArray.push([mathLetter(l, \"+\"), n + 1]);\n  moveArray.push([mathLetter(l, \"-\"), n]);\n  moveArray.push([mathLetter(l, \"+\"), n]);\n  moveArray.push([mathLetter(l, \"-\"), n - 1]);\n  moveArray.push([l, n - 1]);\n  moveArray.push([mathLetter(l, \"+\"), n - 1]);\n  return moveArray;\n};\nconst getPawnMoves = tile => {};\nconst getKnightMoves = tile => {};\nconst getBishopMoves = tile => {};\nconst getRookMoves = tile => {};\nconst getQueenMoves = tile => {};\nconst findMoveTiles = (piece, tile) => {\n  if (piece === 0) return getKingMoves(tile);\n  if (piece === 1) return getPawnMoves(tile);\n  if (piece === 2) return getKnightMoves(tile);\n  if (piece === 3) return getBishopMoves(tile);\n  if (piece === 4) return getRookMoves(tile);\n  if (piece === 5) return getQueenMoves(tile);\n};\nexport default findMoveTiles;","map":{"version":3,"names":["mathLetter","getKingMoves","tile","moveArray","l","n","push","getPawnMoves","getKnightMoves","getBishopMoves","getRookMoves","getQueenMoves","findMoveTiles","piece"],"sources":["/home/domuen/Documents/random code/chess-js/src/helpers/find-move-tiles.ts"],"sourcesContent":["import { PieceID, ColumnString, RowNumber } from \"../types\";\nimport mathLetter from \"./math-letter\";\n\nconst getKingMoves = (tile: [ColumnString, RowNumber]) => {\n  const moveArray = [];\n\n  const l = tile[0];\n  const n = tile[1]\n\n  moveArray.push([mathLetter(l, \"-\"), n + 1]);\n  moveArray.push([l, n + 1]);\n  moveArray.push([mathLetter(l, \"+\"), n + 1]);\n  moveArray.push([mathLetter(l, \"-\"), n]);\n  moveArray.push([mathLetter(l, \"+\"), n]);\n  moveArray.push([mathLetter(l, \"-\"), n - 1]);\n  moveArray.push([l, n - 1]);\n  moveArray.push([mathLetter(l, \"+\"), n - 1]);\n\n  return moveArray;\n};\n\nconst getPawnMoves = (tile: [ColumnString, RowNumber]) => { };\nconst getKnightMoves = (tile: [ColumnString, RowNumber]) => { };\nconst getBishopMoves = (tile: [ColumnString, RowNumber]) => { };\nconst getRookMoves = (tile: [ColumnString, RowNumber]) => { };\nconst getQueenMoves = (tile: [ColumnString, RowNumber]) => { };\n\nconst findMoveTiles = (piece: PieceID, tile: [ColumnString, RowNumber]) => {\n  if (piece === 0) return getKingMoves(tile);\n  if (piece === 1) return getPawnMoves(tile);\n  if (piece === 2) return getKnightMoves(tile);\n  if (piece === 3) return getBishopMoves(tile);\n  if (piece === 4) return getRookMoves(tile);\n  if (piece === 5) return getQueenMoves(tile);\n}\n\nexport default findMoveTiles;\n"],"mappings":"AACA,OAAOA,UAAU,MAAM,eAAe;AAEtC,MAAMC,YAAY,GAAIC,IAA+B,IAAK;EACxD,MAAMC,SAAS,GAAG,EAAE;EAEpB,MAAMC,CAAC,GAAGF,IAAI,CAAC,CAAC,CAAC;EACjB,MAAMG,CAAC,GAAGH,IAAI,CAAC,CAAC,CAAC;EAEjBC,SAAS,CAACG,IAAI,CAAC,CAACN,UAAU,CAACI,CAAC,EAAE,GAAG,CAAC,EAAEC,CAAC,GAAG,CAAC,CAAC,CAAC;EAC3CF,SAAS,CAACG,IAAI,CAAC,CAACF,CAAC,EAAEC,CAAC,GAAG,CAAC,CAAC,CAAC;EAC1BF,SAAS,CAACG,IAAI,CAAC,CAACN,UAAU,CAACI,CAAC,EAAE,GAAG,CAAC,EAAEC,CAAC,GAAG,CAAC,CAAC,CAAC;EAC3CF,SAAS,CAACG,IAAI,CAAC,CAACN,UAAU,CAACI,CAAC,EAAE,GAAG,CAAC,EAAEC,CAAC,CAAC,CAAC;EACvCF,SAAS,CAACG,IAAI,CAAC,CAACN,UAAU,CAACI,CAAC,EAAE,GAAG,CAAC,EAAEC,CAAC,CAAC,CAAC;EACvCF,SAAS,CAACG,IAAI,CAAC,CAACN,UAAU,CAACI,CAAC,EAAE,GAAG,CAAC,EAAEC,CAAC,GAAG,CAAC,CAAC,CAAC;EAC3CF,SAAS,CAACG,IAAI,CAAC,CAACF,CAAC,EAAEC,CAAC,GAAG,CAAC,CAAC,CAAC;EAC1BF,SAAS,CAACG,IAAI,CAAC,CAACN,UAAU,CAACI,CAAC,EAAE,GAAG,CAAC,EAAEC,CAAC,GAAG,CAAC,CAAC,CAAC;EAE3C,OAAOF,SAAS;AAClB,CAAC;AAED,MAAMI,YAAY,GAAIL,IAA+B,IAAK,CAAE,CAAC;AAC7D,MAAMM,cAAc,GAAIN,IAA+B,IAAK,CAAE,CAAC;AAC/D,MAAMO,cAAc,GAAIP,IAA+B,IAAK,CAAE,CAAC;AAC/D,MAAMQ,YAAY,GAAIR,IAA+B,IAAK,CAAE,CAAC;AAC7D,MAAMS,aAAa,GAAIT,IAA+B,IAAK,CAAE,CAAC;AAE9D,MAAMU,aAAa,GAAGA,CAACC,KAAc,EAAEX,IAA+B,KAAK;EACzE,IAAIW,KAAK,KAAK,CAAC,EAAE,OAAOZ,YAAY,CAACC,IAAI,CAAC;EAC1C,IAAIW,KAAK,KAAK,CAAC,EAAE,OAAON,YAAY,CAACL,IAAI,CAAC;EAC1C,IAAIW,KAAK,KAAK,CAAC,EAAE,OAAOL,cAAc,CAACN,IAAI,CAAC;EAC5C,IAAIW,KAAK,KAAK,CAAC,EAAE,OAAOJ,cAAc,CAACP,IAAI,CAAC;EAC5C,IAAIW,KAAK,KAAK,CAAC,EAAE,OAAOH,YAAY,CAACR,IAAI,CAAC;EAC1C,IAAIW,KAAK,KAAK,CAAC,EAAE,OAAOF,aAAa,CAACT,IAAI,CAAC;AAC7C,CAAC;AAED,eAAeU,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}